---
title: Git Rev News Edition 81 (November 29th, 2021)
layout: default
date: 2021-11-29 12:06:51 +0100
author: chriscool
categories: [news]
navbar: false
---

## Git Rev News: Edition 81 (November 29th, 2021)

Welcome to the 81st edition of [Git Rev News](https://git.github.io/rev_news/rev_news/),
a digest of all things Git. For our goals, the archives, the way we work, and how to contribute or to
subscribe, see [the Git Rev News page](https://git.github.io/rev_news/rev_news/) on [git.github.io](http://git.github.io).

This edition covers what happened during the month of October 2021.

## Discussions

<!---
### General
-->

### Reviews

* [[PATCH 0/3] Fun with cpp word regex](https://lore.kernel.org/git/pull.1054.git.1633589461.gitgitgadget@gmail.com/)

  Johannes Sixt sent a small patch series about improving C++ (also
  called 'cpp') support in the userdiff mechanism. This mechanism is
  used by Git to generate diffs that are customized to specific
  programming languages (like C, shell, Perl, MATLAB, etc.) or markup
  languages (like HTML, Markdown, TeX, etc.).

  Especially one of the patches splits the regex that was matching all
  the numbers into 3 different regexes:

    - one for floating point numbers that begin with a decimal point,
    - one for decimal and octal integers as well as other
      floating point numbers, and
    - one for hexadecimal and binary integers.

  The result is that expressions like `1+2`, `1.5-e+2+f` and `.l` are
  not considered numbers any more and are properly parsed for diff
  purposes in C++ files.

  Another patch in the series allows single-quote characters as digit
  separators according to the C++17 standard, like in `3.141'592'654`
  or `0xdead'beaf`.

  The third and last patch prevents the `<=>` generalized comparison
  operator (also called 'spaceship' operator) introduced in C++20 from
  being split into `<=` and `>`.

  Ævar Arnfjörð Bjarmason replied to Johannes suggesting to add a
  few tests in the `t/t4034/cpp/` directory, where test files for the
  cpp userdiff mechanism reside.

  Johannes agreed with Ævar and sent a
  [second version](https://lore.kernel.org/git/pull.1054.v2.git.1633720197.gitgitgadget@gmail.com/)
  of his patch series. This series included 2 new patches that
  improved existing tests and added new tests for problematic behavior
  that the other patches were fixing.

  Ævar commented on this series saying that it was much improved, but
  it could perhaps be even better if:

    - the C++ support was split up from the C support,

    - some tests were added first, before the behavior was changed,
      and

    - some tests could be added for code comments, as he wondered if
      tokens that often occur in natural language, like `"` and `&`,
      were still correctly handled when they appeared in code comments.

  Johannes agreed with the second point, but wasn't interested in
  working on the others.

  Ævar and Johannes discussed a bit further if it was worth doing
  something for code comments, but Johannes concluded that it wasn't.

  Johannes then sent a
  [third version](https://lore.kernel.org/git/pull.1054.v3.git.1633885384.gitgitgadget@gmail.com/)
  of his patch series. In this new version test cases for single-quote
  characters as digit separators and the `<=>` generalized comparison
  operator were moved to a new commit before the commits supporting
  these features.

  Later on, Johannes [noticed](https://lore.kernel.org/git/a5a05e33-3ad9-e78c-69c0-a466eadeffec@kdbg.org/)
  that the single-quote character as digit separator is problematic
  and requires a more sophisticated implementation. For example, as
  implemented the character literal `'.'` would be split into `'.`
  and `'`. The support for digit separators was eventually reverted.

  This patch series was then merged into the master branch, so that
  Git 2.34 that was recently released has better support for C++ in
  diffs.

<!---
### Support
-->

<!---
## Developer Spotlight:
-->

## Releases

+ Git [2.34.0](https://public-inbox.org/git/xmqq8rxpgwki.fsf@gitster.g/),
[2.34.0-rc2](https://public-inbox.org/git/xmqq4k8kzuz2.fsf@gitster.g/),
[2.34.0-rc1](https://public-inbox.org/git/xmqqsfwc4yne.fsf@gitster.g/),
[2.34.0-rc0](https://public-inbox.org/git/xmqqwnlve57e.fsf@gitster.g/)
+ Git for Windows [2.34.0(1)](https://github.com/git-for-windows/git/releases/tag/v2.34.0.windows.1),
[2.34.0-rc2(1)](https://github.com/git-for-windows/git/releases/tag/v2.34.0-rc2.windows.1),
[2.34.0-rc1(1)](https://github.com/git-for-windows/git/releases/tag/v2.34.0-rc1.windows.1),
[2.34.0-rc0(1)](https://github.com/git-for-windows/git/releases/tag/v2.34.0-rc0.windows.1)
+ Bitbucket Server [7.18](https://confluence.atlassian.com/bitbucketserver/bitbucket-server-release-notes-872139866.html)
+ GitHub Enterprise [3.3.0](https://help.github.com/enterprise-server@3.3/admin/release-notes#3.3.0),
[3.2.3](https://help.github.com/enterprise-server@3.2/admin/release-notes#3.2.3),
[3.1.11](https://help.github.com/enterprise-server@3.1/admin/release-notes#3.1.11),
[3.0.19](https://help.github.com/enterprise-server@3.0/admin/release-notes#3.0.19),
[3.2.2](https://help.github.com/enterprise-server@3.2/admin/release-notes#3.2.2),
[3.1.10](https://help.github.com/enterprise-server@3.1/admin/release-notes#3.1.10),
[3.0.18](https://help.github.com/enterprise-server@3.0/admin/release-notes#3.0.18)
+ GitLab [14.5](https://about.gitlab.com/releases/2021/11/22/gitlab-14-5-released/)
[14.1.8](https://about.gitlab.com/releases/2021/11/15/gitlab-14-1-8-released/),
[14.4.2](https://about.gitlab.com/releases/2021/11/08/gitlab-14-4-2-released/),
[14.0.12](https://about.gitlab.com/releases/2021/11/05/gitlab-14-0-12-released/),
[13.12.15](https://about.gitlab.com/releases/2021/11/03/gitlab-13-12-15-released/),
[14.4.1, 14.3.4, and 14.2.6](https://about.gitlab.com/releases/2021/10/28/security-release-gitlab-14-4-1-released/)
+ Gerrit Code Review [3.4.2](https://www.gerritcodereview.com/3.4.html#342),
[3.3.8](https://www.gerritcodereview.com/3.3.html#338),
[3.2.14](https://www.gerritcodereview.com/3.2.html#3214),
[2.16.28](https://www.gerritcodereview.com/2.16.html#21628)
+ GitKraken [8.1.1](https://support.gitkraken.com/release-notes/current)

## Other News

__Various__

* Derrick Stolee and Lessley Dennington [talk about the future of Git at scale](https://www.youtube.com/watch?v=pXdabSCz4JA).
* [Highlights from Git 2.34](https://github.blog/2021-11-15-highlights-from-git-2-34/)
  by Taylor Blau on GitHub Blog, and  
  [Git 2.34 sets new merge default, speeds things up for monorepo users](https://devclass.com/2021/11/17/version-control-git-2_34/)
  by Julia Schmidt on Dev Class.
* [Require pull requests without requiring reviews](https://github.blog/changelog/2021-11-10-require-pull-requests-without-requiring-reviews/) on GitHub.
* [Deprecating Atlassian account password for Bitbucket API and Git activity](https://bitbucket.org/blog/deprecating-atlassian-account-password-for-bitbucket-api-and-git-activity)
  (for Git over HTTPS) on Bitbucket.

__Light reading__

* [Get lazy with lazygit](https://dev.to/tahsinature/get-lazy-with-lazygit-4h37) by Tahsin on DEV.to.
  [Lazygit](https://github.com/jesseduffield/lazygit) was first mentioned in [Git Rev News Edition #42 (August 22nd, 2018)](https://git.github.io/rev_news/2018/08/22/edition-42/).
* [Should You Use HTTPS or SSH For Git?](https://www.cloudsavvyit.com/14822/should-you-use-https-or-ssh-for-git/)
  by Anthony Heddings on Cloud Savvy IT.
* [How To Switch a GitHub Repository to SSH Authentication](https://www.cloudsavvyit.com/14747/how-to-switch-a-github-repository-to-ssh-authentication/)
  by Anthony Heddings on Cloud Savvy IT.
* [5 Underrated [free] resources to learn Git and GitHub](https://dev.to/ifrah/5-underrated-resources-to-learn-git-and-github-4edi)
  by ifrah on DEV.to.
  * [GitHub Minesweeper](https://profy.dev/project/github-minesweeper) by Profy
    was mentioned in [Git Rev News Edition #80 (October 30th, 2021)](https://git.github.io/rev_news/2021/10/30/edition-80/).
  * [Oh My Git!](https://ohmygit.org/) game by bleeptrack and blinry
    was mentioned in [Git Rev News Edition #72 (February 27th, 2021)](https://git.github.io/rev_news/2021/02/27/edition-72/).
* The “[Advanced Git](https://css-tricks.com/cherry-picking-commits-in-git/)” series
  by Tobias Günther on CSS-Tricks, courtesy of the Tower Git client,
  (mentioned in [Git Rev News #80](https://git.github.io/rev_news/2021/10/30/edition-80/)),
  continues:
  * [Better Collaboration With Pull Requests](https://css-tricks.com/better-collaboration-with-pull-requests/)
  * [Merge Conflicts: What They Are and How to Deal with Them](https://css-tricks.com/merge-conflicts-what-they-are-and-how-to-deal-with-them)
  * [Rebase vs. Merge: Integrating Changes in Git](https://css-tricks.com/rebase-vs-merge-integrating-changes-in-git)
  * [Interactive Rebase: Clean up your Commit History](https://css-tricks.com/interactive-rebase-clean-up-your-commit-history)
  * [Cherry-Picking Commits in Git](https://css-tricks.com/cherry-picking-commits-in-git)
* [How to become a Git expert!](https://dev.to/sagarbarapatre/how-to-become-a-git-expert-1jl2)
  by Sagar Barapatre on DEV.to.
* [What is .gitkeep? How to Track and Push Empty Folders in Git.](https://www.freecodecamp.org/news/what-is-gitkeep/)
  by Kealan Parr on freeCodeCamp.
* [How to Write Good Commit Messages with Commitlint](https://www.freecodecamp.org/news/how-to-use-commitlint-to-write-good-commit-messages/)
  by Anish De on freeCodeCamp.
* [Removing a .env file from Git history](https://daily-dev-tips.com/posts/removing-a-env-file-from-git-history/)
  (or any other accidentally added, committed, and pushed file)
  by Chris Bongers on Daily Dev Tips.
* [The case against monorepos](https://www.infoworld.com/article/3638860/the-case-against-monorepos.html)
  by Lee Atchison on Info World.
  * You can find various arguments for and against monorepos in Git Rev News editions
    [#4](https://git.github.io/rev_news/2015/06/03/edition-4/), [#9](https://git.github.io/rev_news/2015/11/11/edition-9/), [#47](https://git.github.io/rev_news/2019/01/23/edition-47/) (pros and cons), [#72](https://git.github.io/rev_news/2021/02/27/edition-72/), [#78](https://git.github.io/rev_news/2021/08/31/edition-78/),
	not counting articles about improving the performance of large repositories, which monorepos usually are.
* [How to do pull request reviews](https://dev.to/mage_ai/how-to-do-pull-request-reviews-mm6)
  by Mage company on DEV.to.
* [Git Rebase for Preventing Merge Commits](https://dev.to/jenc/git-rebase-for-preventing-merge-commits-2len)
  by jen chan on DEV.to.
* [Signed git pushes](https://people.kernel.org/monsieuricon/signed-git-pushes)
  by Konstantin Ryabitsev (2020).
* [DeployBot Configuration with Git LFS](https://www.cadonau.net/blog/2020/08/24/deploybot-git-lfs/)
  by Markus Cadonau (2020).


__Git tools and sites__

* [`commitlint`](https://commitlint.js.org/#/) is a tool written in JavaScript and running on Node.js
  (that is, an npm tool) that helps your team with adhering to a commit convention.
* [Conventional Changelog](https://github.com/conventional-changelog/conventional-changelog)
  is an npm tool to generate changelogs and release notes from a project's commit messages and metadata.
* [Git Command Explorer](https://gitexplorer.com/) is a web application
  to help you find the right commands you need
  without digging through the web,
  made by Summitech company.
* [Arlo's Commit Notation](https://github.com/RefactoringCombos/ArlosCommitNotation)
  is a notation for small commit messages that shows
  the risk involved in each step and the author's intention,
  conveyed in the first 3 characters of the commit summary line.

## Credits

This edition of Git Rev News was curated by
Christian Couder &lt;<christian.couder@gmail.com>&gt;,
Jakub Narębski &lt;<jnareb@gmail.com>&gt;,
Markus Jansen &lt;<mja@jansen-preisler.de>&gt; and
Kaartic Sivaraam &lt;<kaartic.sivaraam@gmail.com>&gt;
with help from Johannes Schindelin and Johannes Sixt.
