---
title: Git Rev News Edition 78 (August 31st, 2021)
layout: default
date: 2021-08-31 12:06:51 +0100
author: chriscool
categories: [news]
navbar: false
---

## Git Rev News: Edition 78 (August 31st, 2021)

Welcome to the 78th edition of [Git Rev News](https://git.github.io/rev_news/rev_news/),
a digest of all things Git. For our goals, the archives, the way we work, and how to contribute or to
subscribe, see [the Git Rev News page](https://git.github.io/rev_news/rev_news/) on [git.github.io](http://git.github.io).

This edition covers what happened during the month of July 2021.

## Discussions

<!---
### General
-->

<!---
### Reviews
-->

### Support

* [Bug report: GIT_CONFIG and user.email/name](https://lore.kernel.org/git/1C6C1E49-5EC1-420D-A72A-8C50BD1931A2@getmailspring.com/)

  German Lashevich sent a bug report about an issue when using the
  `GIT_CONFIG` environment variable.

  He gave an example where he sets the `user.name` and `user.email`
  config variables to some values in a temporary
  `/tmp/git-test/.gitconfig` config file, and then sets `GIT_CONFIG`
  to point to this file.

  When he then tried to commit some changes, Git errored out with an
  "Author identity unknown" error and instructions about how to set
  the current account's default identity. He expected that the values
  of the `user.name` and `user.email` variables set in the temporary
  config file would have been taken into account.

  Peff, alias Jeff King, replied that `GIT_CONFIG` is a historical
  wart that isn't used by all of Git, but only the `git config`
  command, and even there `git config --file` should be used instead.

  He suggested using `GIT_CONFIG_GLOBAL` or `GIT_CONFIG_SYSTEM` which
  are available since v2.32.0. They instruct Git to read a specific
  file instead of the usual global (usually `/etc/gitconfig`) or
  system-level (`$HOME/.gitconfig` and `$XDG_CONFIG_HOME/git/config`)
  config files respectively.

  German thanked Peff saying `GIT_CONFIG_GLOBAL` was what he needed.

  Junio Hamano, the Git maintainer, replied to Peff that reading the
  `GIT_CONFIG` documentation gave a misleading impression as it
  didn't say that `GIT_CONFIG` was only for the `git config` command.

  Peff agreed with Junio saying that the documentation hadn't been
  updated since 2007, when `GIT_CONFIG` really did impact other
  commands, and that he was sending
  [a small patch series](https://lore.kernel.org/git/YO9ZGTX9f1fOpTkh@coredump.intra.peff.net/)
  to improve the situation.

  Taylor Blau and Martin Ågren reviewed the patches and discussed them
  a bit with Peff and Junio.

  The patch series was later merged into the master branch, and the
  documentation improvements are now available in the recently
  released Git 2.33.

<!---
## Developer Spotlight:
-->

## Releases

+ Git [2.33.0](https://public-inbox.org/git/xmqq1r6touqi.fsf@gitster.g/),
[2.33.0-rc2](https://public-inbox.org/git/xmqqo8a37eim.fsf@gitster.g/),
[2.33.0-rc1](https://public-inbox.org/git/xmqq5ywigls4.fsf@gitster.g/),
[2.33.0-rc0](https://public-inbox.org/git/xmqqbl6fv2b8.fsf@gitster.g/)
+ Git for Windows [2.33.0(2)](https://github.com/git-for-windows/git/releases/tag/v2.33.0.windows.2),
[2.33.0(1)](https://github.com/git-for-windows/git/releases/tag/v2.33.0.windows.1),
[2.33.0-rc2(1)](https://github.com/git-for-windows/git/releases/tag/v2.33.0-rc2.windows.1),
[2.33.0-rc1(1)](https://github.com/git-for-windows/git/releases/tag/v2.33.0-rc1.windows.1),
[2.33.0-rc0(1)](https://github.com/git-for-windows/git/releases/tag/v2.33.0-rc0.windows.1)
+ GitHub Enterprise [3.1.6](https://help.github.com/enterprise-server@3.1/admin/release-notes#3.1.6),
[3.0.14](https://help.github.com/enterprise-server@3.0/admin/release-notes#3.0.14),
[2.22.20](https://help.github.com/enterprise-server@2.22/admin/release-notes#2.22.20),
[3.1.5](https://help.github.com/enterprise-server@3.1/admin/release-notes#3.1.5),
[3.0.13](https://help.github.com/enterprise-server@3.0/admin/release-notes#3.0.13),
[2.22.19](https://help.github.com/enterprise-server@2.22/admin/release-notes#2.22.19)
+ GitLab [14.0.8](https://about.gitlab.com/releases/2021/08/26/gitlab-14-0-8-released/),
[14.2.1](https://about.gitlab.com/releases/2021/08/23/gitlab-14-2-1-released/),
[14.2](https://about.gitlab.com/releases/2021/08/22/gitlab-14-2-released/),
[14.1.3](https://about.gitlab.com/releases/2021/08/17/gitlab-14-1-3-released/),
[13.12.10](https://about.gitlab.com/releases/2021/08/10/gitlab-13-12-10-released/),
[14.1.2](https://about.gitlab.com/releases/2021/08/03/security-release-gitlab-14-1-2-released/),
[14.1.1](https://about.gitlab.com/releases/2021/07/28/gitlab-14-1-1-released/)
+ Gerrit Code Review [3.3.6](https://www.gerritcodereview.com/3.3.html#336),
[3.2.12](https://www.gerritcodereview.com/3.2.html#3212),
[3.1.16](https://www.gerritcodereview.com/3.1.html#3116),
[3.4.1](https://www.gerritcodereview.com/3.4.html#341)
+ GitKraken [7.7.2](https://support.gitkraken.com/release-notes/current),
[7.7.1](https://support.gitkraken.com/release-notes/current)
+ GitHub Desktop [2.9.2](https://desktop.github.com/release-notes/),
[2.9.1](https://desktop.github.com/release-notes/)

## Other News

__Various__
* [Highlights from Git 2.33](https://github.blog/2021-08-16-highlights-from-git-2-33/)
  by Taylor Blau on GitHub Blog.
* [Treeverse raises $23M to bring Git-like version control to data lakes](https://venturebeat.com/2021/07/28/treeverse-raises-23m-to-bring-git-like-version-control-to-data-lakes/):
  [lakeFS](https://lakefs.io/).
* [GitHub has shut down its Git password authentication on August 13, 2021](https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/);
  you should preferably use [token-based authentication](https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/) instead; support for SSH keys continues.


__Light reading__
* [Optimizing Git’s Merge Machinery, Part V](https://blog.palantir.com/optimizing-gits-merge-machinery-part-v-46ff3710633e) by Elijah Newren on Palantir Blog.
* [How to write release notes](https://drewdevault.com/2021/05/19/How-to-write-release-notes.html)
  by Drew DeVault.
* [From a Single Repo, to Multi-Repos, to Monorepo, to Multi-Monorepo](https://css-tricks.com/from-a-single-repo-to-multi-repos-to-monorepo-to-multi-monorepo/)
  by Leonardo Losoviz on CSS-Tricks.
  * The idea of monorepos was first mentioned by this name in [Git Rev News Edition #4](https://git.github.io/rev_news/2015/06/03/edition-4/),
    with [Edition #47](https://git.github.io/rev_news/2019/01/23/edition-47/)
	including many links to discussions about their advantages and disadvantages. 
* [Visualizing a codebase](https://next.github.com/projects/repo-visualization):
  how can we automatically “fingerprint” a codebase to see its structure at a glance,
  by Amelia Wattenberger on GitHub Next.
* [The History Behind Git](https://ahmedgouda.hashnode.dev/the-history-behind-git)
  by Ahmed Gouda (also [on DEV.to](https://dev.to/ahmedgouda/the-history-behind-git-53ag)).
* [Getting geeky with Git](https://wanago.io/courses/getting-geeky-with-git/),
  an 11 part series by Marcin Wanago.
* [New in Git: switch and restore](https://www.banterly.net/2021/07/31/new-in-git-switch-and-restore/)
  by Dragos Barosan (new to the author; [`git switch`](https://git-scm.com/docs/git-switch)
  and [`git restore`](https://git-scm.com/docs/git-restore) appeared in Git 2.23 in 2019).
* [A Guide to Git Stash](https://dev.to/pragativerma18/a-guide-to-git-stash-2h5d)
  by Pragati Verma on DEV.to.
* [How to Fix, Edit, or Undo Git Commits (Changing Git History)](https://www.cloudsavvyit.com/13067/how-to-fix-edit-or-undo-git-commits-changing-git-history/)
  by Anthony Heddings on CloudSavvy IT.
* [5 Ways to Undo Mistakes with Git](https://www.sitepoint.com/5-ways-to-undo-mistakes-with-git)
  by Tobias Günther on SitePoint.
* [5 Git Tricks Every Developer Should Know](https://dev.to/shadid12/5-git-tricks-every-developer-should-know-1201)
  by Shadid Haque on DEV.to.
* [Git for Managing Small Projects](https://thenewstack.io/git-for-managing-small-projects/)
  by Rob "drtorq" Reilly on The New Stack, the first part in a planned series of tutorials on Git.
* [Git: Fetch and Merge, don’t Pull](https://longair.net/blog/2009/04/16/git-fetch-and-merge/),
  an old blog post by Mark Longair about his tips related to fetching and merging versus pulling,
  that was [discussed a long time ago on the mailing list](https://lore.kernel.org/git/alpine.DEB.1.00.0904191709220.10279@pacific.mpi-cbg.de/).
* [Best practices for writing code comments](https://stackoverflow.blog/2021/07/05/best-practices-for-writing-code-comments/)
  by Ellen Spertus about writing better code comments.


__Git tools and sites__
* [lakeFS](https://lakefs.io/) is an open source tool that transforms your
  object storage into a Git-like repository. It enables you to manage your
  [data lake](https://aws.amazon.com/big-data/datalakes-and-analytics/what-is-a-data-lake/)
  (storing _unprocessed_ data) the way you manage your code. Supports AWS S3,
  Azure Blob Storage and Google Cloud Storage; works seamlessly with all
  modern data frameworks such as Spark, Hive, AWS Athena, Presto, etc.
  * Existing products comparable to LakeFS include tools such as
    [DVC](https://dvc.org/) (first mentioned in [Git Rev News Edition #42](https://git.github.io/rev_news/2018/08/22/edition-42/)),
	[Pachyderm](https://www.pachyderm.com/) (first mentioned in [Git Rev News Edition #49](https://git.github.io/rev_news/2019/03/20/edition-49/)), and
	[Meltano](https://meltano.com/) (first mentioned in [Git Rev News Edition #42](https://git.github.io/rev_news/2018/08/22/edition-42/)).

* [`CITATION.cff`](https://citation-file-format.github.io/) files,
  which use Citation File Format (CFF), are plain text files with
  human- and machine-readable citation information for software (and datasets).
  Code developers can include them in their repositories to let others know
  how to correctly cite their software.  Supported by GitHub, Zenodo and Zotero.

* [GitUI](https://github.com/extrawurst/gitui) is a blazing fast terminal based GUI for Git
  written in Rust, meant to work reliably even on large repositories.
  Similar to [tig](https://jonas.github.io/tig/).


## Credits

This edition of Git Rev News was curated by
Christian Couder &lt;<christian.couder@gmail.com>&gt;,
Jakub Narębski &lt;<jnareb@gmail.com>&gt;,
Markus Jansen &lt;<mja@jansen-preisler.de>&gt; and
Kaartic Sivaraam &lt;<kaartic.sivaraam@gmail.com>&gt;
with help from Elijah Newren and Philip Oakley.
