---
title: Git Rev News Edition 44 (October 24th, 2018)
layout: default
date: 2018-10-24 12:06:51 +0100
author: chriscool
categories: [news]
navbar: false
---

## Git Rev News: Edition 44 (October 24th, 2018)

Welcome to the 44th edition of [Git Rev News](https://git.github.io/rev_news/rev_news/),
a digest of all things Git. For our goals, the archives, the way we work, and how to contribute or to
subscribe, see [the Git Rev News page](https://git.github.io/rev_news/rev_news/) on [git.github.io](https://git.github.io).

This edition covers what happened during the month of September 2018.

## Discussions

<!---
### General
-->


### Reviews

* [Add an EditorConfig file](https://public-inbox.org/git/20180917230307.588334-1-sandals@crustytoothpaste.net/)

Brian Carlson sent a patch that adds a `.editorconfig` file to the
Git codebase.

The [EditorConfig web site](https://editorconfig.org/) explains the
purpose and format of such files. It also list a number of
[text editors](https://editorconfig.org/#download) that support such
files either natively or after installing a plugin.

The goal of adding this file to the Git codebase is to make it easier
to automatically configure one's editor. This will help contributors,
especially new ones, follow the many indentation rules used in the Git
codebase without having to read the [CodingGuidelines document](https://github.com/git/git/blob/master/Documentation/CodingGuidelines).

Taylor Blau, who has been using Vim with the editorconfig-vim plugin
for years, supported the patch and the choice of settings that Brian
had written in the `.editorconfig` file. He suggested adding a
guideline to enforce at most 72 characters per line in commit
messages.

Junio Hamano, the Git maintainer, also replied to Brian wondering how
to keep the content of the file in sync with the [`.clang-format` file](https://github.com/git/git/blob/master/.clang-format)
that is already part of the project and can be used through the
`style` Makefile target.

Brian replied to Junio that `make style` is not run automatically and
only formats C code, not Perl, Python, shell code and commit
messages. Brian also said that he had trouble running `make style` as
it invokes `clang-format` as a Git subcommand.

Junio replied that in an ideal dream-world, an EditorConfig driven
tool solution to "generate clang-format configuration from the section
for C language in any EditorConfig file" already existed,
but otherwise he would be "perfectly OK if the plan is to manually
keep them (loosely) in sync".

Eric Sunshine then pointed Brian to [git-clang-format](https://llvm.org/svn/llvm-project/cfe/trunk/tools/clang-format/git-clang-format)
which integrates `clang-format` with Git, so that clang-format can be
run on the changes in current files or a specific commit.

This prompted Peff and Brian to discuss possible improvements in
Debian or Git that would make `git-clang-format` work better.

Responding to Junio, Brian suggested adding a script to check that
`.editorconfig` and `.clang-format` were kept in sync, but Junio
replied that adding a comment in both files saying that they should be
kept in sync would be enough.

Brian resent an [improved version](https://public-inbox.org/git/20181008202903.100166-1-sandals@crustytoothpaste.net/)
of his patch which enforces at most 72 characters per line in commit
messages along with another patch that adds the comments that Junio
suggested.

Ævar Arnfjörð Bjarmason suggested an improvement to also catch Perl
files with the `.pl` and `.pm` file extensions. Brian
implemented this in a [third version](https://public-inbox.org/git/20181008220353.780301-1-sandals@crustytoothpaste.net/)
of his patches.

This third version should be merged into the "master" branch soon.

<!---
### Support
-->

<!---
## Developer Spotlight:
-->

## Releases

+ Git [2.14.5, 2.15.3, 2.16.5, 2.17.2, 2.18.1, and 2.19.1](https://public-inbox.org/git/xmqqy3bcuy3l.fsf@gitster-ct.c.googlers.com)
+ Git for Windows [2.19.1(1)](https://github.com/git-for-windows/git/releases/tag/v2.19.1.windows.1)
+ libgit2 [0.27.5](https://github.com/libgit2/libgit2/releases/tag/v0.27.5)
+ libgit2sharp [0.25.3](https://github.com/libgit2/libgit2sharp/releases/tag/v0.25.3)
+ Gerrit Code Review [2.15.5](https://www.gerritcodereview.com/2.15.html#2155),
[2.15.4](https://www.gerritcodereview.com/2.15.html#2154),
[2.15.3](https://www.gerritcodereview.com/2.15.html#2153),
[2.15.2](https://www.gerritcodereview.com/2.15.html#2152),
[2.15.1](https://www.gerritcodereview.com/2.15.html#2151),
[2.15](https://www.gerritcodereview.com/2.15.html)
+ Bitbucket Server [5.15](https://confluence.atlassian.com/bitbucketserver/bitbucket-server-release-notes-872139866.html)
+ GitHub Enterprise [2.15.0](https://enterprise.github.com/releases/2.15.0/notes),
[2.14.7](https://enterprise.github.com/releases/2.14.7/notes),
[2.13.13](https://enterprise.github.com/releases/2.13.13/notes),
[2.12.21](https://enterprise.github.com/releases/2.12.21/notes),
[2.14.6](https://enterprise.github.com/releases/2.14.6/notes),
[2.13.12](https://enterprise.github.com/releases/2.13.12/notes),
[2.12.20](https://enterprise.github.com/releases/2.12.20/notes)
+ GitLab [11.3.6](https://about.gitlab.com/2018/10/17/gitlab-11-3-6-released/),
[11.3.5](https://about.gitlab.com/2018/10/15/gitlab-11-3-5-released/),
[11.3.4, 11.2.5, and 11.1.8](https://about.gitlab.com/2018/10/05/critical-security-release-11-3-4/),
[11.3.3](https://about.gitlab.com/2018/10/04/gitlab-11-3-3-released/),
[11.3.1, 11.2.4, and 11.1.7](https://about.gitlab.com/2018/10/01/security-release-gitlab-11-dot-3-dot-1-released/),
[11.3.0](https://about.gitlab.com/2018/09/22/gitlab-11-3-released/)
+ GitKraken [4.0.6](https://support.gitkraken.com/release-notes/current),
[4.0.5](https://support.gitkraken.com/release-notes/current),
[4.0.4](https://support.gitkraken.com/release-notes/current),
[4.0.3](https://support.gitkraken.com/release-notes/current),
[4.0.2](https://support.gitkraken.com/release-notes/current),
[4.0.1](https://support.gitkraken.com/release-notes/current),
[4.0.0](https://support.gitkraken.com/release-notes/current)
+ GitHub Desktop [1.4.3](https://desktop.github.com/release-notes/),
[1.4.2](https://desktop.github.com/release-notes/),
[1.4.1](https://desktop.github.com/release-notes/)

## Other News

__Various__

* The Git community is still looking for an
  [Outreachy](https://www.outreachy.org/) applicant to work on a Git
  related project from December 2018 to March 2019. Two different
  projects are proposed on the [list of all the open projects](https://www.outreachy.org/apply/project-selection/).
* New Git PLC Members have been [announced](https://public-inbox.org/git/20180925215112.GA29627@sigill.intra.peff.net/).
  Ævar Arnfjörð Bjarmason and Christian Couder are joining Junio
  Hamano and Jeff King (alias Peff) in the committee representing the
  Git project as part of Software Freedom Conservancy.
* [Highlights from Git 2.19](https://blog.github.com/2018-09-10-highlights-from-git-2-19/) on the GitHub Blog
* [GitHub launches Actions, its workflow automation tool](https://techcrunch.com/2018/10/16/github-launches-actions-its-workflow-automation-tool/).
  One may register for [GitHub Actions](https://github.com/features/actions) beta;
  there is already [a short curated list of actions](https://github.com/sdras/awesome-actions) to use on GitHub.
* [Bitbucket Cloud introduced branching model support](https://bitbucket.org/blog/introducing-bitbucket-branching-model-support),
  helping to keep consistent naming decisions when creating branches,
  enforcing branching permissions for different types of branches, etc.
* [GitLab raises $100 million from Iconiq, GV, and Khosla, at $1.1 billion valuation](https://venturebeat.com/2018/09/19/gitlab-raises-100-million-from-iconiq-gv-and-khosla-at-1-1-billion-valuation/)
* [Sourcegraph](https://sourcegraph.com/start), a code navigation engine for a repository with advanced search capabilities
  [has just gone open-source](https://www.i-programmer.info/news/90-tools/12219-sourcegraph-powers-up-your-code-repository.html).

__Light reading__

* [How to use the Jenkins Git Plugin: Tips and tricks](https://www.theserverside.com/video/Tips-and-tricks-on-how-to-use-Jenkins-Git-Plugin) by Cameron McKenzie
* [Deploying frontend applications — the fun way](https://hackernoon.com/deploying-frontend-applications-the-fun-way-bc3f69e15331) (from Git repository), by Carlos Roso
* [Stacked Diffs versus Pull Requests](https://jg.gg/2018/09/29/stacked-diffs-versus-pull-requests/) by Jackson Gabbard
* [How to organize your git branches](https://dev.to/hardkoded/how-to-organize-your-git-branches-4dci), listing different approaches, by Dario Kondratiuk
* [and the second top voted question on StackOverflow is...](https://dev.to/tomerbendavid/the-second-most-voted-question-on-stackoverflow-is-60b) by Tomer Ben David

__Git tools and sites__

* Makers of Sublime Text editor introduced Git GUI client: [Sublime Merge](https://www.sublimemerge.com/) (tagline: _Git, done Sublime_)
* TwilioQuest, an interactive, self-paced game-like learning platform now includes
  [Contributing to Open Source Projects on GitHub](https://www.twilio.com/quest/mission/28)
  quest


## Credits

This edition of Git Rev News was curated by
Christian Couder &lt;<christian.couder@gmail.com>&gt;,
Jakub Narębski &lt;<jnareb@gmail.com>&gt;,
Markus Jansen &lt;<mja@jansen-preisler.de>&gt; and
Gabriel Alcaras &lt;<gabriel.alcaras@telecom-paristech.fr>&gt;.
