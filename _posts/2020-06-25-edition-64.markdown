---
title: Git Rev News Edition 64 (June 25th, 2020)
layout: default
date: 2020-06-25 12:06:51 +0100
author: chriscool
categories: [news]
navbar: false
---

## Git Rev News: Edition 64 (June 25th, 2020)

Welcome to the 64th edition of [Git Rev News](https://git.github.io/rev_news/rev_news/),
a digest of all things Git. For our goals, the archives, the way we work, and how to contribute or to
subscribe, see [the Git Rev News page](https://git.github.io/rev_news/rev_news/) on [git.github.io](http://git.github.io).

This edition covers what happened during the month of May 2020.

## Discussions

<!---
### General
-->

### Reviews

* [fetch: allow adding a filter after initial clone](https://lore.kernel.org/git/20200513200040.68968-1-delphij@google.com/)

  Xin Li sent a patch to allow using a partial clone filter when
  fetching even if the original clone didn't use one.

  As the patch was lacking a proper commit message, Junio Hamano, the
  Git maintainer, asked Xin to add one. So Xin sent an explanation of
  what the commit does taking as an example a shallow clone, with
  `git clone --depth=1 ...`, that is transformed into a partial clone
  with `git fetch --unshallow --filter=blob:none ...`. Xin wrote that
  being able to do so is easier for the user than having to manually
  set the `core.repositoryFormatVersion` and `extensions.partialClone`
  config options.

  Junio replied asking how we could be sure that the server actually
  supports the protocol extensions required for partial clone, as
  setting up the config options manually or automatically shouldn't be
  done without verifying that.

  Brian Carlson also replied to Xin's initial patch wondering if it
  was safe to set the `core.repositoryFormatVersion` to `1` as it would
  make Git fail if any already configured `extensions.*` config
  option, like `extensions.tomatoSalad`, was not recognized.

  Xin then sent a version 2 of his patch. This time there was a commit
  message in the patch and a cover letter along with the patch that
  explained the changes. The patch itself added tests and checked that
  the existing configuration had no unsupported `extensions.*`
  configuration before upgrading the `core.repositoryFormatVersion`
  config option to `1`.

  Jonathan Nieder reviewed the patch suggesting a number of small
  changes and moving some content from the cover letter to the commit
  message. Xin then sent a version 3 of his patch applying Jonathan's
  suggestions and without a cover letter.

  Junio in the meantime commented on the version 2 that it was not
  enough to check that the existing configuration had no unsupported
  `extensions.*` configuration variable, but that instead the code
  should check that there is no `extensions.*` configuration variable
  at all, as any such configuration variable could have an unsupported
  value. Jonathan then agreed with Junio.

  Xin replied to them that the current code doesn't actually check
  repositoryFormatVersion, so setting `extensions.partialclone` is
  enough to make `git fetch --filter=...` work. He then asked what we
  want to do about this situation.

  Jonathan replied that this should be fixed even though it was a
  separate concern from the patch.

  Xin then sent a version 4 of his patch taking into account Junio's
  comments. Junio reviewed it and suggested other improvements. He
  further elaborated on `core.repositoryFormatVersion` upgrade by
  suggesting the following criteria:

  > (1) if upgrading from v0, there must be no `extensions.*` and
  >
  > (2) if upgrading from other versions, there must be no
  >     `extensions.*` we do not recognize.

  Jonathan also reviewed version 4 of Xin's patch focusing on the
  changes made in tests.

  Xin sent a version 5 of the patch addressing the comments. He also
  replied to Jonathan's review. Junio also replied to Jonathan's
  review agreeing with him that some changes in the patch actually
  belong to another patch.

  Xin then sent a version 6 with 4 patches instead of 1. Junio
  reviewed the patches and found that only the last one could be
  controversial as it could perhaps break an existing set-up.

  The last patch indeed contained the changes about checking
  repositoryFormatVersion that Jonathan and Junio wanted to see
  separately. With that patch the `extensions.*` config options don't
  take effect unless `core.repositoryFormatVersion` has been upgraded
  to `1` or higher.

  So for example if `extensions.worktreeConfig` is set to `true` but
  `core.repositoryFormatVersion` isn't set, then with the patch Git
  will behave as if `extensions.worktreeConfig` wasn't set.

  Junio thinks that this change is the right thing to do in the longer
  term though. He asked for comments about that but no-one
  answered. So the patch series has been merged to 'pu' and then
  'next' and according to the last "What's cooking in git.git" email from Junio,
  the plan is to merge to 'master'.

<!---
### Support
-->

<!---
## Developer Spotlight:
-->

## Releases

+ Git [2.27.0](https://public-inbox.org/git/xmqqzh9mu4my.fsf@gitster.c.googlers.com/)
+ Git for Windows [2.27.0(1)](https://github.com/git-for-windows/git/releases/tag/v2.27.0.windows.1)
+ git-filter-repo [2.27.1](https://lore.kernel.org/git/CABPp-BFo=SRkMezdD_FvM92-bgdeBzfExpjtjYiEvg0UM1rWQQ@mail.gmail.com/),
[2.27.0](https://lore.kernel.org/git/CABPp-BF+xvzroi5QU8zPp-7KoSS16v1CsM43vWx1WO5NjyU0BQ@mail.gmail.com/)
+ libgit2 [1.0.1](https://github.com/libgit2/libgit2/releases/tag/v1.0.1)
+ GitLab [13.0.6, 12.10.11, 12.9.10](https://about.gitlab.com/releases/2020/06/10/critical-security-release-13-0-6-released/),
[12.10.10](https://about.gitlab.com/releases/2020/06/04/gitlab-12-10-10-released/),
[13.0.5](https://about.gitlab.com/releases/2020/06/04/gitlab-13-0-5-released/),
[13.0.4, 12.10.9, 12.9.9](https://about.gitlab.com/releases/2020/06/03/critical-security-release-13-0-4-released/),
[12.10.8](https://about.gitlab.com/releases/2020/05/29/gitlab-12-10-8-released/),
[13.0.3](https://about.gitlab.com/releases/2020/05/29/gitlab-13-0-3-released/),
[13.0.1, 12.10.7, 12.9.8](https://about.gitlab.com/releases/2020/05/27/security-release-13-0-1-released/)
+ Bitbucket Server [7.3](https://confluence.atlassian.com/bitbucketserver/bitbucket-server-release-notes-872139866.html)
+ Gerrit Code Review [3.2.2](https://www.gerritcodereview.com/3.2.html#322),
[3.1.7](https://www.gerritcodereview.com/3.1.html#317),
[3.0.11](https://www.gerritcodereview.com/3.0.html#3011),
[3.2.1](https://www.gerritcodereview.com/3.2.html#321),
[3.1.6](https://www.gerritcodereview.com/3.1.html#316),
[3.0.10](https://www.gerritcodereview.com/3.0.html#3010),
[2.16.21](https://www.gerritcodereview.com/2.16.html#21621),
[2.15.19](https://www.gerritcodereview.com/2.15.html#21519),
[2.14.21](https://www.gerritcodereview.com/2.14.html#21421),
[3.2.0](https://www.gerritcodereview.com/3.2.html),
[2.16.20](https://www.gerritcodereview.com/2.16.html#21620),
[3.1.5](https://www.gerritcodereview.com/3.1.html#315),
[3.0.9](https://www.gerritcodereview.com/3.0.html#309)
+ GitHub Enterprise [2.21.0](https://enterprise.github.com/releases/2.21.0/notes),
[2.20.9](https://enterprise.github.com/releases/2.20.9/notes),
[2.19.15](https://enterprise.github.com/releases/2.19.15/notes),
[2.18.20](https://enterprise.github.com/releases/2.18.20/notes)
+ GitKraken [7.0.1](https://support.gitkraken.com/release-notes/current)
+ GitHub Desktop [2.5.2](https://desktop.github.com/release-notes/),
[2.5.1](https://desktop.github.com/release-notes/)

## Other News

__Various__

* The Git PLC (Project Leadership Committee) [announced](https://lore.kernel.org/git/CAP8UFD1KfEps4hS8eadBK-E4e5WyWSh93XivRabZAVhiCuQimQ@mail.gmail.com/)
  that it drafted a statement "regarding Git and branch naming" with
  the [Software Freedom Conservancy](https://sfconservancy.org/) that
  has been [posted at Conservancy's site](https://sfconservancy.org/news/2020/jun/23/gitbranchname/).
  Articles related to this issue include:
    * [Proposal to Rename the ‘Master’ Branch of WordPress-Owned Git Repositories](https://wptavern.com/proposal-to-rename-the-master-branch-from-wordpress-owned-git-repositories)
    * [Loaded terms in free software [LWN.net]](https://lwn.net/Articles/823224/)
    * [Replacing master in git](https://dev.to/damcosset/replacing-master-in-git-2jim)
    * [Migrating your default git branch to 'main'](https://blog.b12.io/migrating-your-default-git-branch-to-main-a0fb706e3668)
    * [GitHub to replace "master" with alternative term to avoid slavery references](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/);
      note that while BitKeeper used master/slave terminology for repositories, 'master' branch in Git is about being 'master copy'

* Eric Wong, the developer of [public-inbox.org](https://public-inbox.org/README.html),
  [implemented a read-only IMAP/IMAPS server](https://lore.kernel.org/git/20200610184147.GA1887@dcvr/),
  so that a Git mailing list archive can now be accessed through
  initially 8, and now 9, IMAP mailboxes sliced into ~50k messages to
  not overload clients.

* Matheus Tavares, who was a [GSoC](https://summerofcode.withgoogle.com/)
  student [last year](https://matheustavares.gitlab.io/gsoc/), has been
  hired as a freelancer by Amazon to improve Git
  performance. Congratulations to him!

* A new [Hacking Git](https://git.github.io/Hacking-Git/) page lists
  documents helpful to develop Git.

* [Introducing GitHub Super Linter: one linter to rule them all](https://github.blog/2020-06-18-introducing-github-super-linter-one-linter-to-rule-them-all/) by Lucas Gravley on GitHub Blog.

* [DVC 1.0 release: new features for MLOps](https://dvc.org/blog/dvc-1-0-release); the
  [1.0 Pre-release](https://dvc.org/blog/dvc-3-years-and-1-0-release) was mentioned
  in a [previous edition of Git Rev News](https://git.github.io/rev_news/2020/05/28/edition-63/#other-news).


__Light reading__

* [Using GitHub Actions for MLOps (Machine Learning Operations) & Data Science](https://github.blog/2020-06-17-using-github-actions-for-mlops-data-science/) by Hamel Husain on GitHub Blog.
* [How to squash git commits](https://levelup.gitconnected.com/how-to-squash-git-commits-9a095c1bc1fc) by Srebalaji Thirumalai.
* [Rebase and retag](https://github.polettix.it/ETOOBUSY/2020/06/11/rebase-retag/) and [Rebase and retag, but manually](https://github.polettix.it/ETOOBUSY/2020/06/12/rebase-auto-retag/) is a series of short articles by Flavio Poletti on how to use tagging to schedule blog article publication and how to use rebase to change planned publishing date.
* [Reordering git commits (not patches) with interactive rebase](https://blog.plover.com/prog/git-reorder-3.html) by Mark Dominus (a very specific use-case).
* [Speeding up a Git monorepo at Dropbox with <200 lines of code](https://dropbox.tech/application/speeding-up-a-git-monorepo-at-dropbox-with--200-lines-of-code) by Utsav Shah on Dropbox.Tech .
* [Using `make` and `git diff` for a simple and powerful test harness](https://chrismorgan.info/blog/make-and-git-diff-test-harness/) by Chris Morgan
* [Git Explained: Proper Team Etiquette](https://dev.to/milu_franz/git-explained-proper-team-etiquette-1od) by Milu.


__Git tools and sites__

* [Piranha](https://github.com/uber/piranha/) by Uber is an Open Source tool for automated clean up of stale code caused by [feature flags](https://www.martinfowler.com/articles/feature-toggles.html) that are no longer required. It currently supports Java, Swift, and Objective-C.
* [git-fuzzy](https://github.com/bigH/git-fuzzy) is a CLI interface to Git that relies heavily on the [fzf](https://github.com/junegunn/fzf) general-purpose command-line fuzzy finder (version 0.21.0 or higher).

## Credits

This edition of Git Rev News was curated by
Christian Couder &lt;<christian.couder@gmail.com>&gt;,
Jakub Narębski &lt;<jnareb@gmail.com>&gt;,
Markus Jansen &lt;<mja@jansen-preisler.de>&gt; and
Kaartic Sivaraam &lt;<kaartic.sivaraam@gmail.com>&gt;.
